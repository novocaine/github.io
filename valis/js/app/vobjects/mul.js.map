{"version":3,"sources":["../../../../../www/js/app/vobjects/mul.js"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,CAAC,sBAAD,EAAyB,UAAzB,CAAP,EACA,UAAC,OAAD,EAAU,IAAV,EAAmB;MACX;;;AACJ,aADI,QACJ,CAAY,EAAZ,EAAgB;4BADZ,UACY;;oEADZ,qBAEI,KADQ;KAAhB;;iBADI;;kCAKQ;AAAE,eAAO,CAAP,CAAF;;;;mCACC;AAAE,eAAO,CAAP,CAAF;;;;+BAEJ,SAAS,QAAQ,SAAS;AACjC,YAAM,YAAY,KAAK,YAAL,CAAkB,OAAO,CAAP,CAAlB,CAAZ,CAD2B;AAEjC,YAAM,aAAa,KAAK,YAAL,CAAkB,OAAO,CAAP,CAAlB,CAAb,CAF2B;AAGjC,YAAI,aAAa,UAAb,EAAyB;AAC3B,cAAM,UAAS,QAAQ,UAAR,EAAT,CADqB;AAE3B,eAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,OAAO,CAAP,EAAU,MAAV,EAAkB,GAAtC,EAA2C;AACzC,oBAAO,CAAP,IAAY,KAAK,EAAL,CAAQ,OAAO,CAAP,EAAU,CAAV,CAAR,EAAsB,OAAO,CAAP,EAAU,CAAV,CAAtB,CAAZ,CADyC;WAA3C;AAGA,iBAAO,OAAP,CAL2B;SAA7B;;AAQA,YAAI,cAAJ,CAXiC;AAYjC,YAAI,kBAAJ,CAZiC;;AAcjC,YAAI,UAAJ,EAAgB;AACd,eAAK,OAAO,CAAP,CAAL,CADc;AAEd,mBAAS,OAAO,CAAP,CAAT,CAFc;SAAhB,MAGO,IAAI,SAAJ,EAAe;AACpB,eAAK,OAAO,CAAP,CAAL,CADoB;AAEpB,mBAAS,OAAO,CAAP,CAAT,CAFoB;SAAf,MAGA;AACL,iBAAO,OAAO,CAAP,IAAY,OAAO,CAAP,CAAZ,CADF;SAHA;;AAOP,YAAM,SAAS,QAAQ,UAAR,EAAT,CAxB2B;AAyBjC,aAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,EAAJ,EAAQ,GAAxB,EAA6B;AAC3B,iBAAO,CAAP,IAAY,KAAK,EAAL,CAAQ,GAAG,CAAH,CAAR,EAAe,MAAf,CAAZ,CAD2B;SAA7B;;AAIA,eAAO,MAAP,CA7BiC;;;;WAR/B;IAAiB,QAAQ,OAAR,EADN;;MA0CX;;;;;;;;;;;yBACD,GAAG,GAAG;AAAE,eAAO,IAAI,CAAJ,CAAT;;;;WADL;IAAY,UA1CD;;AA8CjB,MAAI,YAAJ,GAAmB,GAAnB,CA9CiB;AA+CjB,MAAI,aAAJ,GAAoB,GAApB,CA/CiB;;MAiDX;;;;;;;;;;;yBACD,GAAG,GAAG;AAAE,eAAO,IAAI,CAAJ,CAAT;;;;WADL;IAAY,UAjDD;;AAqDjB,MAAI,YAAJ,GAAmB,GAAnB,CArDiB;AAsDjB,MAAI,aAAJ,GAAoB,GAApB,CAtDiB;;AAwDjB,SAAO,EAAE,QAAF,EAAO,QAAP,EAAP,CAxDiB;CAAnB,CADA","file":"mul.js","sourcesContent":["define(['app/vobjects/vobject', 'app/util'],\n(vobject, util) => {\n  class BinaryOp extends vobject.VObject {\n    constructor(fn) {\n      super(fn);\n    }\n\n    numInputs() { return 2; }\n    numOutputs() { return 1; }\n\n    generate(context, inputs, outputs) {\n      const firstIsAa = util.isAudioArray(inputs[0]);\n      const secondIsAa = util.isAudioArray(inputs[1]);\n      if (firstIsAa && secondIsAa) {\n        const result = context.get_buffer();\n        for (let i = 0; i < inputs[0].length; i++) {\n          result[i] = this.fn(inputs[0][i], inputs[1][i]);\n        }\n        return result;\n      }\n\n      let aa;\n      let scalar;\n\n      if (secondIsAa) {\n        aa = inputs[1];\n        scalar = inputs[0];\n      } else if (firstIsAa) {\n        aa = inputs[0];\n        scalar = inputs[1];\n      } else {\n        return inputs[0] * inputs[1];\n      }\n\n      const result = context.get_buffer();\n      for (let i = 0; i < aa; i++) {\n        result[i] = this.fn(aa[i], scalar);\n      }\n\n      return result;\n    }\n  }\n\n  class Mul extends BinaryOp {\n    fn(a, b) { return a * b; }\n  }\n\n  Mul.vobjectClass = '*';\n  Mul.vobjectSymbol = '*';\n\n  class Add extends BinaryOp {\n    fn(a, b) { return a + b; }\n  }\n\n  Add.vobjectClass = '+';\n  Add.vobjectSymbol = '+';\n\n  return { Mul, Add };\n});\n"]}