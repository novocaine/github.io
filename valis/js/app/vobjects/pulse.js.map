{"version":3,"sources":["../../../../../www/js/app/vobjects/pulse.js"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,CAAC,QAAD,EAAW,sBAAX,EAAmC,SAAnC,EAA8C,UAA9C,CAAP,EACA,UAAC,CAAD,EAAI,OAAJ,EAAa,OAAb,EAAsB,IAAtB,EAA+B;MACvB;;;;;kCACQ;AAAE,eAAO,CAAP,CAAF;;;;mCACC;AAAE,eAAO,CAAP,CAAF;;;;AAEb,aAJI,KAIJ,CAAY,OAAZ,EAAqB,GAArB,EAA0B,WAA1B,EAAuC;4BAJnC,OAImC;;yEAJnC,kBAKI,SAAS,KAAK,cADiB;;AAErC,YAAK,GAAL,GAAW,WAAW,GAAX,CAAX;AAFqC,WAGrC,CAAK,WAAL,GAAmB,WAAW,WAAX,CAAnB;AAHqC,WAIrC,CAAK,kBAAL,GAA0B,IAA1B,CAJqC;AAKrC,YAAK,gBAAL,GAAwB,CAAxB,CALqC;;KAAvC;;iBAJI;;+BAYK,SAAS,QAAQ,SAAS;AACjC,YAAM,eAAe,KAAK,WAAL,CAAiB,KAAK,GAAL,EAAU,QAAQ,UAAR,CAA1C,CAD2B;AAEjC,YAAM,kBAAkB,KAAK,WAAL,CAAiB,KAAK,GAAL,GAAW,KAAK,WAAL,EAClD,QAAQ,UAAR,CADI,CAF2B;AAIjC,YAAM,uBAAuB,KAAK,GAAL,CAAS,eAAe,eAAf,CAAhC,CAJ2B;AAKjC,YAAM,WAAW,EAAX,CAL2B;;AAOjC,YAAI,IAAI,KAAK,kBAAL,KAA4B,IAA5B,GACN,QAAQ,UAAR,GAAqB,KAAK,kBAAL;;;;AARU,YAY3B,WAAW,QAAQ,UAAR,GAAqB,CAArB,CAZgB;AAajC,YAAI,WAAW,CAAX,EAAc;AAChB,eAAK,KAAK,IAAL,CAAU,WAAW,YAAX,CAAV,GAAqC,YAArC,CADW;SAAlB;;AAIA,eACK,IAAI,QAAQ,UAAR,GAAqB,QAAQ,UAAR,EACzB,KAAK,KAAK,gBAAL,GAAwB,oBAAxB,GAA+C,eAA/C,EAAgE;AACxE,mBAAS,IAAT,CAAc,IAAI,OAAJ,CAAY,CAAZ,EAAe,KAAK,gBAAL,CAA7B,EADwE;AAExE,eAAK,gBAAL,GAAwB,KAAK,gBAAL,GAAwB,CAAxB,GAA4B,CAA5B,CAFgD;SAF1E;;AAOA,aAAK,kBAAL,GAA0B,CAA1B,CAxBiC;;AA0BjC,eAAO,CAAC,QAAD,CAAP,CA1BiC;;;;WAZ/B;IAAc,QAAQ,OAAR,EADS;;AA2C7B,QAAM,YAAN,GAAqB,OAArB,CA3C6B;AA4C7B,QAAM,aAAN,GAAsB,OAAtB,CA5C6B;;AA8C7B,SAAO,KAAP,CA9C6B;CAA/B,CADA","file":"pulse.js","sourcesContent":["define(['lodash', 'app/vobjects/vobject', 'app/msg', 'app/util'],\n(_, vobject, Message, util) => {\n  class Pulse extends vobject.VObject {\n    numInputs() { return 0; }\n    numOutputs() { return 1; }\n\n    constructor(options, bpm, pulseLength) {\n      super(options, bpm, pulseLength);\n      this.bpm = parseFloat(bpm); // in beats per minute\n      this.pulseLength = parseFloat(pulseLength); // in beats\n      this._nextMsgSampleTime = null;\n      this._nextMessageData = 1;\n    }\n\n    generate(context, inputs, outputs) {\n      const samplePeriod = util.bpmToPeriod(this.bpm, context.sampleRate);\n      const sampleTimePulse = util.bpmToPeriod(this.bpm / this.pulseLength,\n        context.sampleRate);\n      const sampleTimeAfterPulse = Math.abs(samplePeriod - sampleTimePulse);\n      const messages = [];\n\n      let t = this._nextMsgSampleTime === null ?\n        context.sampleTime : this._nextMsgSampleTime;\n\n      // skip ticks if we have fallen behind - these can't be delivered late\n      // as timing is too important\n      const behindBy = context.sampleTime - t;\n      if (behindBy > 0) {\n        t += Math.ceil(behindBy / samplePeriod) * samplePeriod;\n      }\n\n      for (;\n           t < context.sampleTime + context.bufferSize;\n           t += this._nextMessageData ? sampleTimeAfterPulse : sampleTimePulse) {\n        messages.push(new Message(t, this._nextMessageData));\n        this._nextMessageData = this._nextMessageData ? 0 : 1;\n      }\n\n      this._nextMsgSampleTime = t;\n\n      return [messages];\n    }\n  }\n\n  Pulse.vobjectClass = 'pulse';\n  Pulse.vobjectSymbol = 'pulse';\n\n  return Pulse;\n});\n"]}