{"version":3,"sources":["../../../../../www/js/app/vobjects/delay.js"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,CAAC,sBAAD,EAAyB,UAAzB,CAAP,EACA,UAAC,OAAD,EAAU,IAAV,EAAmB;MACX;;;AACJ,aADI,KACJ,CAAY,OAAZ,EAAkC;UAAb,8DAAQ,mBAAK;;4BAD9B,OAC8B;;yEAD9B,kBAEI,SAAS,QADiB;;AAEhC,YAAK,KAAL,GAAa,KAAb;;AAFgC,WAIhC,CAAK,IAAL,GAAY,IAAZ,CAJgC;AAKhC,YAAK,IAAL,GAAY,IAAZ,CALgC;;KAAlC;;iBADI;;kCASQ;AAAE,eAAO,CAAP,CAAF;;;;mCACC;AAAE,eAAO,CAAP,CAAF;;;;+BAEJ,SAAS,QAAQ,SAAS;AACjC,YAAI,OAAO,CAAP,MAAc,SAAd,EAAyB;AAC3B,iBAAO,EAAP,CAD2B;SAA7B;;AAIA,YAAI,CAAC,KAAK,YAAL,CAAkB,OAAO,CAAP,CAAlB,CAAD,EAA+B;AACjC,gBAAM,MAAM,qBAAN,CAAN,CADiC;SAAnC;;AAIA,YAAM,SAAS,QAAQ,SAAR,EAAT,CAT2B;AAUjC,YAAM,eAAe,KAAK,KAAL,GAAa,QAAQ,UAAR,CAVD;;AAYjC,YAAI,KAAK,IAAL,KAAc,IAAd,EAAoB;AACtB,eAAK,IAAL,GAAY,KAAK,WAAL,CAAiB,YAAjB,CAAZ,CADsB;SAAxB;;;AAZiC,aAiB5B,IAAI,KAAI,CAAJ,EAAO,KAAI,OAAO,MAAP,IAAiB,KAAI,KAAK,IAAL,CAAU,MAAV,EAAkB,IAA3D,EAAgE;AAC9D,iBAAO,EAAP,IAAY,KAAK,IAAL,CAAU,KAAK,IAAL,KAAc,KAAK,IAAL,CAAU,MAAV,CAApC,CAD8D;SAAhE;;AAIA,YAAI,IAAI,CAAJ;;;AArB6B,aAwB5B,IAAI,IAAI,KAAK,IAAL,CAAU,MAAV,EACR,IAAI,OAAO,CAAP,EAAU,MAAV,IAAoB,IAAI,OAAO,MAAP,EAC5B,KAAK,GAAL,EAAU;AACb,iBAAO,CAAP,IAAY,OAAO,CAAP,EAAU,CAAV,CAAZ,CADa;SAFf;;;AAxBiC,YA+BjC,CAAK,IAAL,GAAY,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,MAAV,CA/BS;;AAiCjC,YAAI,eAAe,KAAK,IAAL,CAAU,MAAV,EAAkB;;;;AAInC,eAAK,IAAL,GAAY,KAAK,WAAL,CAAiB,YAAjB,CAAZ,CAJmC;SAArC;;;AAjCiC,aAyC5B,IAAI,IAAI,KAAK,IAAL,GAAY,CAAZ,EAAe,IAAI,OAAO,CAAP,EAAU,MAAV,GAAmB,CAAnB,EAAsB,KAAK,CAAL,EAAQ,KAAK,GAAL,EAAU;;AAEtE,cAAI,IAAI,CAAJ,EAAO;AACT,gBAAI,KAAK,IAAL,CAAU,MAAV,GAAmB,CAAnB,CADK;WAAX;AAGA,eAAK,IAAL,CAAU,CAAV,IAAe,OAAO,CAAP,EAAU,CAAV,CAAf,CALsE;SAAxE;;AAQA,eAAO,CAAC,MAAD,CAAP,CAjDiC;;;;WAZ/B;IAAc,QAAQ,OAAR,EADH;;AAkEjB,QAAM,YAAN,GAAqB,OAArB,CAlEiB;AAmEjB,QAAM,aAAN,GAAsB,KAAtB,CAnEiB;;AAqEjB,SAAO,KAAP,CArEiB;CAAnB,CADA","file":"delay.js","sourcesContent":["define(['app/vobjects/vobject', 'app/util'],\n(vobject, util) => {\n  class Delay extends vobject.VObject {\n    constructor(options, delay = 0.5) {\n      super(options, delay);\n      this.delay = delay;\n      // circular buffer\n      this._buf = null;\n      this._ptr = null;\n    }\n\n    numInputs() { return 1; }\n    numOutputs() { return 1; }\n\n    generate(context, inputs, outputs) {\n      if (inputs[0] === undefined) {\n        return [];\n      }\n\n      if (!util.isAudioArray(inputs[0])) {\n        throw Error('input must be audio');\n      }\n\n      const result = context.getBuffer();\n      const delaySamples = this.delay * context.sampleRate;\n\n      if (this._buf === null) {\n        this._buf = util.allocBuffer(delaySamples);\n      }\n\n      // write output from buffer\n      for (let i = 0; i < result.length && i < this._buf.length; i++) {\n        result[i] = this._buf[this._ptr++ % this._buf.length];\n      }\n\n      let i = 0;\n\n      // write input delayed directly to result (when delay < bufsize)\n      for (let r = this._buf.length;\n           i < inputs[0].length && r < result.length;\n           i++, r++) {\n        result[r] = inputs[0][i];\n      }\n\n      // fix up the ptr to avoid it getting crazy large eventually\n      this._ptr = this._ptr % this._buf.length;\n\n      if (delaySamples > this._buf.length) {\n        // user increased the length of the delay, so reallocate it.\n        // TODO: this discards the existing buffer entirely, which\n        // still contains relevant data if delay was > bufsize\n        this._buf = util.allocBuffer(delaySamples);\n      }\n\n      // write unwritten input overflow to the buffer\n      for (let b = this._ptr - 1, j = inputs[0].length - 1; j >= i; j--, b--) {\n        // % doesn't modulo correctly for negatives\n        if (b < 0) {\n          b = this._buf.length - 1;\n        }\n        this._buf[b] = inputs[0][j];\n      }\n\n      return [result];\n    }\n  }\n\n  Delay.vobjectClass = 'delay';\n  Delay.vobjectSymbol = 'del';\n\n  return Delay;\n});\n"]}