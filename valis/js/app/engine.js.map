{"version":3,"sources":["../../../../www/js/app/engine.js"],"names":[],"mappings":"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","file":"engine.js","sourcesContent":["define(['lodash'], (_) => {\n  const AudioArrayType = Float32Array;\n\n  class Engine {\n    constructor() {\n      this.graph = new VObjectGraph();\n      this.bufferSize = 512;\n      this.numChannels = 2;\n    }\n\n    start() {\n      this.bufferPool = new BufferPool(this.bufferSize);\n      this.context = new (window.AudioContext || window.webkitAudioContext)();\n      this.audioNode = this.context.createScriptProcessor(this.bufferSize, 0,\n        this.numChannels);\n      this.audioNode.onaudioprocess = _.bind(this.onaudioprocess, this);\n      this.outputEdges = {};\n\n      // if you dont do this, the callback stops getting fired after a while on\n      // chrome .. yep .. wow .. such bug\n      // https://code.google.com/p/chromium/issues/detail?id=82795\n      window.onaudioprocess = this.audioNode.onaudioprocess;\n      window.audioNode = this.audioNode;\n\n      this.audioNode.connect(this.context.destination);\n      this.running = true;\n\n      this.prevOutputValues = {};\n    }\n\n    stop() {\n      if (this.audioNode) {\n        this.audioNode.disconnect(this.context.destination);\n      }\n      this.running = false;\n    }\n\n    onaudioprocess(e) {\n      const domTimestamp = window.performance ? window.performance.now() : null;\n      const extOutputBuffers = [];\n      for (let i = 0; i < e.outputBuffer.numberOfChannels; i++) {\n        extOutputBuffers.push(e.outputBuffer.getChannelData(i));\n      }\n\n      // output buffers aren't necessarily zero when you get them from the system\n      this.writeSilence(extOutputBuffers);\n\n      const extInputBuffers = [];\n      if (e.inputBuffer) {\n        for (let i = 0; i < e.inputBuffer.numberOfChannels; i++) {\n          extInputBuffers.push(e.inputBuffer.getChannelData(i));\n        }\n      }\n\n      // time in samples since context init, is fractional (sigh)\n      this.audioProcess = new AudioProcess(\n        this.context.currentTime * this.context.sampleRate,\n        this.context.sampleRate,\n        extInputBuffers,\n        extOutputBuffers,\n        this.graph,\n        this.bufferPool,\n        domTimestamp,\n        this.bufferSize);\n\n      this.prevOutputValues = this.audioProcess.run(this.prevOutputValues);\n    }\n\n    writeSilence(extOutputBuffers) {\n      for (let i = 0; i < extOutputBuffers.length; i++) {\n        const data = extOutputBuffers[i];\n        for (let s = 0; s < data.length; s++) {\n          data[s] = 0;\n        }\n      }\n    }\n  }\n\n  class AudioProcess {\n    // has the lifetime of one onaudioprocess callback\n    constructor(sampleTime,\n        sampleRate,\n        extInputBuffers,\n        extOutputBuffers,\n        graph,\n        bufferPool,\n        domTimestamp,\n        bufferSize) {\n      this.sampleTime = Math.round(sampleTime);\n      this.sampleRate = sampleRate;\n      this.extInputBuffers = extInputBuffers;\n      this.extOutputBuffers = extOutputBuffers;\n      this.bufferPool = bufferPool;\n      this.graph = graph;\n      this.inputBuffers = {};\n      this.domTimestamp = domTimestamp;\n      this.bufferSize = bufferSize;\n    }\n\n    run(prevOutputValues) {\n      // Generate the graph's data for one sample.\n      //\n      // prevOutputValues is the outputValues of the previous run(), used for\n      // handling feedback loops.\n      const context = {\n        sampleTime: this.sampleTime,\n        sampleRate: this.sampleRate,\n        extInputBuffers: this.extInputBuffers,\n        extOutputBuffers: this.extOutputBuffers,\n        getBuffer: this.bufferPool ? _.bind(this.bufferPool.getBuffer,\n          this.bufferPool) : null,\n        domTimestamp: this.domTimestamp,\n        bufferSize: this.bufferSize\n      };\n\n      // recording of all outputs generated during this traversal; returned to\n      // the caller who then passes it forward as prevOutputValues to the next\n      // run\n      const outputValues = {};\n\n      // tracks which objects have been visited during this traversal\n      const visited = {};\n\n      const getOutput = (vobject, output) => {\n        const outputPath = `${vobject.id}[${output}]`;\n\n        // check in cache\n        const cachedResult = _.get(outputValues, outputPath, undefined);\n\n        // TODO - so we're not caching when a vobject returns falsy or [] ..\n        if (cachedResult !== undefined) {\n          return cachedResult;\n        }\n\n        // check if we have a circularity\n        if (visited[vobject.id]) {\n          // feedback loop, provide val from previous run\n          return _.get(prevOutputValues, outputPath, undefined);\n        }\n        visited[vobject.id] = true;\n\n        // eagerly evaluate arguments\n        const inputs = _.reduce(this.graph.dedgesTo[vobject.id],\n          (memo, inputDedge, toInput) => {\n            const result = getOutput(inputDedge.from,\n              inputDedge.fromOutput);\n            if (result !== undefined) {\n              memo[toInput] = result;\n            }\n            return memo;\n          }, {});\n\n        // do actual work of this vobject\n        const result = vobject.generate(context, inputs,\n          this.graph.dedges[vobject.id]);\n\n        // cache output values\n        outputValues[vobject.id] = result;\n\n        if (result && result.length) {\n          return result[output];\n        }\n\n        return undefined;\n      };\n\n      _.forOwn(this.graph.leaves, (vobject) =>\n        getOutput(vobject, 0)\n      );\n\n      return outputValues;\n    }\n  }\n\n  class BufferPool {\n    constructor(size) {\n      this.heap = [];\n      this.size = size;\n    }\n\n    getBuffer() {\n      /* just use the JS engine's heap for now, could optimize this to try to\n       * re-use them later */\n      return new AudioArrayType(this.size);\n    }\n  }\n\n  class DEdge {\n    /**\n     * A directed edge in a graph of VObjects\n     *\n     * @param from {VObject} the tail vobject\n     * @param fromOutput {int} the output index on the tail vobject\n     * @param to {VObject} the arrow vobject\n     * #param toOutput {int} the input index on the arrow vobject\n     */\n    constructor(from, fromOutput, to, toInput) {\n      this.from = from;\n      this.fromOutput = fromOutput;\n      this.to = to;\n      this.toInput = toInput;\n    }\n\n    id() {\n      return `${this.from.id},${this.fromOutput},${this.to.id},${this.toInput}`;\n    }\n  }\n\n  class VObjectGraph {\n    constructor() {\n      // TODO - these can all be made maps\n      this.leaves = {};\n\n      // one way map of vobject -> outgoing dedges\n      //\n      // {\n      //   (from vobject id): {\n      //      (from output index): [Dedge]\n      //   }\n      // }\n      //\n      // i.e. you can have multiple edges from each output\n      this.dedges = {};\n\n      // lookup of vobject -> incoming dedges (will be in sync with\n      // this.dedges)\n      this.dedgesTo = {};\n\n      // list of vobjects in the graph\n      this.vobjects = {};\n    }\n\n    addVobject(vobject) {\n      // initially, will be a leaf because it has no outputs\n      this.leaves[vobject.id] = vobject;\n      this.dedges[vobject.id] = {};\n      this.vobjects[vobject.id] = vobject;\n    }\n\n    removeVobject(vobject) {\n      delete this.vobjects[vobject.id];\n\n      // remove edges going from the object\n      delete this.dedges[vobject.id];\n\n      // remove edges going to the object\n      _.forOwn(this.dedgesTo[vobject.id], (dedge) => {\n        const newEdges = _.filter(this.dedges[dedge.from.id][dedge.fromOutput],\n          (iterDedge) => {\n            return iterDedge.to !== vobject;\n          });\n        if (newEdges.length === 0) {\n          delete this.dedges[dedge.from.id][dedge.fromOutput];\n          if (_.keys(this.dedges[dedge.from.id]).length === 0) {\n            delete this.dedges[dedge.from.id];\n          }\n        } else {\n          this.dedges[dedge.from.id][dedge.fromOutput] = newEdges;\n        }\n      });\n      delete this.dedgesTo[vobject.id];\n      delete this.leaves[vobject.id];\n    }\n\n    replaceVobject(vobject, newVobject) {\n      this.addVobject(newVobject);\n      _.forOwn(this.dedgesTo[vobject.id], (dedge) => {\n        // TODO: what if the number of inputs changes?\n        this.addDedge(dedge.from, dedge.fromOutput, newVobject, dedge.toInput);\n      });\n      _.forOwn(this.dedges[vobject.id], (edges) => {\n        _.forOwn(edges, (dedge) => {\n          // TODO: what if the number of outputs changes?\n          this.addDedge(newVobject, dedge.fromOutput, dedge.to, dedge.toInput);\n        });\n      });\n      this.removeVobject(vobject);\n    }\n\n    addDedge(from, fromOutput, to, toInput) {\n      if (!(from.id in this.dedges)) {\n        this.dedges[from.id] = {};\n      }\n      if (!this.dedges[from.id][fromOutput]) {\n        this.dedges[from.id][fromOutput] = [];\n      }\n      const outputEdges = this.dedges[from.id][fromOutput];\n      const dedge = new DEdge(from, fromOutput, to, toInput);\n      outputEdges.push(dedge);\n\n      if (!(to.id in this.dedgesTo)) {\n        this.dedgesTo[to.id] = {};\n      }\n      this.dedgesTo[to.id][toInput] = dedge;\n\n      delete this.leaves[from.id];\n    }\n\n    removeDedge(from, fromOutput, to, toInput) {\n      const edges = this.dedges[from.id][fromOutput];\n      for (let i = 0; i < edges.length; i++) {\n        if (edges[i].from === from && edges[i].fromOutput === fromOutput\n            && edges[i].to === to && edges[i].toInput === toInput) {\n          edges.splice(i);\n        }\n      }\n\n      // if theres no more edges from that output, delete the entry entirely\n      if (!edges.length) {\n        delete this.dedges[from.id][fromOutput];\n      }\n\n      delete this.dedgesTo[to.id][toInput];\n\n      // did from just become a leaf?\n      let anyOutputs = false;\n      for (let i = 0; i < this.dedges[from.id].length; i++) {\n        if (this.dedges[from.id].length) {\n          anyOutputs = true;\n          break;\n        }\n      }\n\n      if (!anyOutputs) {\n        this.leaves[from.id] = from;\n      }\n    }\n\n    // XXX - is there a syntax for making this a generator??\n    getAllDedges() {\n      const result = [];\n      _.forOwn(this.dedges, (outputs) => {\n        _.forOwn(outputs, (dedges) => {\n          _.each(dedges, (dedge) => {\n            result.push(dedge);\n          });\n        });\n      });\n      return result;\n    }\n  }\n\n  return {\n    Engine, VObjectGraph, AudioProcess, AudioArrayType\n  };\n});\n"]}